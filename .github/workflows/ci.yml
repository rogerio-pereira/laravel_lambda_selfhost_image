name: Deploy

on: 
  push:
      
jobs:
  ci:
    runs-on: ubuntu-latest
    name: CI
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure PHP 8.3
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml, zip, sqlite3
  
      # - name: Copy ENV file
      #   shell: bash
      #   env:
      #     ENV_FILE: ${{ secrets.LARAVEL_ENV }}
      #   run: 'echo "$ENV_FILE" > .env'

      - name: Copy testing ENV file
        shell: bash
        run: 'cp .env.example .env'
          
      - name: Install composer dependencies
        run: composer install
          
      - name: Install node dependencies
        run: npm ci
          
      - name: Build Frontend
        run: npm run build
      
      - name: Run tests
        run: php artisan key:generate
      
      - name: Run tests
        run: php artisan test --compact
        
  cd:
    runs-on: ubuntu-latest
    needs: [ci]
    name: CD
    steps:
      - uses: actions/checkout@v2

      # Initial setup
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true # Required to build image with Image manifest media type application/vnd.docker.distribution.manifest.v2+json

      # -
      #   name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      -  
        name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REGISTRY_URI }}
  
      # Copy .env file from github
      # - name: Copy ENV file
      #   shell: bash
      #   env:
      #     ENV_FILE: ${{ secrets.LARAVEL_ENV }}
      #   run: 'echo "$ENV_FILE" > .env'

      # Copy .env from aws secret manager
      - 
        name: Export ENV from AWS SecretManager
        uses: say8425/aws-secrets-manager-actions@v2
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          SECRET_NAME: ${{ secrets.SECRET_NAME }}
          OUTPUT_PATH: '.env' # optional

      # Build docker image and push to Dockerhub
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./docker/8.3/Dockerfile_build
      #     push: true
      #     tags: rogeriopereira/laravel_lambda:latest

      # Publish docker to ecr
      # - 
      #   name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./docker/8.3/Dockerfile_build
      #     push: true
      #     tags: ${{ secrets.ECR_REGISTRY_URI }}:latest
      #     platforms: linux/amd64
      #     build-args: "--format docker" # Required to build image with Image manifest media type application/vnd.docker.distribution.manifest.v2+json

      # Disable OCI and use Docker manifest v2
      - name: Build and push Docker image
        run: |
          export DOCKER_CLI_EXPERIMENTAL=disabled
          docker buildx build --platform linux/amd64 --push -t ${{ secrets.ECR_REGISTRY_URI }}:latest -f ./docker/8.3/Dockerfile_build .

      # - name: Push Docker image to ECR
      #   run: docker push ${{ secrets.ECR_REGISTRY_URI }}:latest

      